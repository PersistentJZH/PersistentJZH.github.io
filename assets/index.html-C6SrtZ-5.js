import{_ as p,c as h,e as a,a as i,b as l,d as e,r as t,o as k}from"./app-DIgjTPbY.js";const r={};function d(g,s){const n=t("Mermaid");return k(),h("div",null,[s[5]||(s[5]=a(`<h2 id="一、kubernetes-service-概述" tabindex="-1"><a class="header-anchor" href="#一、kubernetes-service-概述"><span>一、Kubernetes Service 概述</span></a></h2><p>Kubernetes Service 是 Kubernetes 系统中的核心抽象概念之一，它为运行在集群中的应用程序提供稳定的网络端点。Service 解决了 Pod 动态特性带来的网络连接问题：</p><ol><li><p><strong>Pod 动态性挑战</strong>：</p><ul><li>Pod 是临时的，可能随时被创建或销毁</li><li>Pod IP 会随着重启或迁移而变化</li><li>部署规模可能动态伸缩</li></ul></li><li><p><strong>Service 提供的解决方案</strong>：</p><ul><li>稳定的虚拟 IP (VIP) 和 DNS 名称</li><li>自动负载均衡到后端 Pod</li><li>服务发现机制</li><li>多种暴露服务的方式</li></ul></li></ol><h2 id="二、service-的-vip-机制详解" tabindex="-1"><a class="header-anchor" href="#二、service-的-vip-机制详解"><span>二、Service 的 VIP 机制详解</span></a></h2><h3 id="_2-1-vip-的分配与管理" tabindex="-1"><a class="header-anchor" href="#_2-1-vip-的分配与管理"><span>2.1 VIP 的分配与管理</span></a></h3><p>Service 的 ClusterIP 是一个虚拟 IP (VIP)，其生命周期管理包括：</p><ol><li><p><strong>IP 分配机制</strong>：</p><ul><li>由 kube-apiserver 从配置的 <code>service-cluster-ip-range</code> 中分配</li><li>分配范围通过 <code>--service-cluster-ip-range</code> 参数指定（如 10.96.0.0/12）</li><li>分配是顺序进行的，由 etcd 保证原子性</li></ul></li><li><p><strong>VIP 特性</strong>：</p><ul><li>不绑定在任何物理/虚拟网络接口上</li><li>不响应 ARP 请求</li><li>仅存在于 Kubernetes 网络规则中</li><li>生命周期内保持不变（即使所有后端 Pod 更换）</li></ul></li><li><p><strong>IP 回收</strong>：</p><ul><li>Service 删除后其 ClusterIP 被回收</li><li>可配置是否允许 IP 重用</li></ul></li></ol><h3 id="_2-2-vip-的路由原理" tabindex="-1"><a class="header-anchor" href="#_2-2-vip-的路由原理"><span>2.2 VIP 的路由原理</span></a></h3><p>VIP 能够在集群内路由依赖于以下协同工作机制：</p><ol><li><p><strong>kube-proxy 的规则维护</strong>：</p><ul><li>在每个节点上设置网络规则（iptables/IPVS）</li><li>将 VIP 映射到实际 Pod IP</li></ul></li><li><p><strong>CNI 网络插件</strong>：</p><ul><li>确保所有 Pod 位于同一扁平网络或可路由</li><li>维护节点间的网络连通性</li></ul></li><li><p><strong>内核网络栈处理</strong>：</p><ul><li>通过 netfilter 框架实现地址转换</li><li>路由子系统负责最终转发</li></ul></li></ol><h2 id="三、kube-proxy-深度解析" tabindex="-1"><a class="header-anchor" href="#三、kube-proxy-深度解析"><span>三、kube-proxy 深度解析</span></a></h2><h3 id="_3-1-kube-proxy-的三种模式" tabindex="-1"><a class="header-anchor" href="#_3-1-kube-proxy-的三种模式"><span>3.1 kube-proxy 的三种模式</span></a></h3><h4 id="_3-1-1-userspace-模式-已弃用" tabindex="-1"><a class="header-anchor" href="#_3-1-1-userspace-模式-已弃用"><span>3.1.1 userspace 模式（已弃用）</span></a></h4><p><strong>工作原理</strong>：</p><ol><li>kube-proxy 在用户空间监听 Service 和 Endpoint 变化</li><li>为每个 Service 打开一个随机端口</li><li>通过 iptables 规则将流量重定向到这个端口</li><li>kube-proxy 进程内部实现负载均衡</li></ol><p><strong>缺点</strong>：</p><ul><li>用户态和内核态切换开销大</li><li>性能较差</li></ul><h4 id="_3-1-2-iptables-模式-默认" tabindex="-1"><a class="header-anchor" href="#_3-1-2-iptables-模式-默认"><span>3.1.2 iptables 模式（默认）</span></a></h4><p><strong>架构设计</strong>：</p><div class="language-" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>+---------------------------------------------------+</span></span>
<span class="line"><span>|                   Pod A                           |</span></span>
<span class="line"><span>| 发起请求: curl 10.96.1.1:80            |</span></span>
<span class="line"><span>+---------------------------------------------------+</span></span>
<span class="line"><span>            |</span></span>
<span class="line"><span>            v</span></span>
<span class="line"><span>+---------------------------------------------------+</span></span>
<span class="line"><span>|               主机网络栈                          |</span></span>
<span class="line"><span>|   PREROUTING -&gt; KUBE-SERVICES -&gt; KUBE-SVC-XXX     |</span></span>
<span class="line"><span>|   -&gt; KUBE-SEP-XXX (DNAT) -&gt; 路由决策             |</span></span>
<span class="line"><span>+---------------------------------------------------+</span></span>
<span class="line"><span>            |</span></span>
<span class="line"><span>            v</span></span>
<span class="line"><span>+---------------------------------------------------+</span></span>
<span class="line"><span>|                   Pod B                           |</span></span>
<span class="line"><span>| 接收请求: 10.244.1.2:80               |</span></span>
<span class="line"><span>+---------------------------------------------------+</span></span></code></pre></div><p><strong>规则示例</strong>：</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># Service 入口规则</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-A</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> KUBE-SERVICES</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -d</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 10.96.1.1/32</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -p</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> tcp</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -m</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> tcp</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --dport</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 80</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -j</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> KUBE-SVC-ABC123</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 负载均衡规则（50%概率选择第一个后端）</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-A</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> KUBE-SVC-ABC123</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -m</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> statistic</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --mode</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> random</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --probability</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 0.5</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -j</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> KUBE-SEP-DEF456</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-A</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> KUBE-SVC-ABC123</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -j</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> KUBE-SEP-GHI789</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 端点 DNAT 规则</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-A</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> KUBE-SEP-DEF456</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -p</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> tcp</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -m</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> tcp</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -j</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> DNAT</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --to-destination</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 10.244.1.2:80</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">-A</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> KUBE-SEP-GHI789</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -p</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> tcp</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -m</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> tcp</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -j</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> DNAT</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --to-destination</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 10.244.2.3:80</span></span></code></pre></div><p><strong>特点</strong>：</p><ul><li>完全在内核空间处理，性能好</li><li>规则数量随 Service 和 Pod 数量线性增长</li><li>负载均衡算法简单（随机平等选择）</li></ul><h4 id="_3-1-3-ipvs-模式-生产推荐" tabindex="-1"><a class="header-anchor" href="#_3-1-3-ipvs-模式-生产推荐"><span>3.1.3 IPVS 模式（生产推荐）</span></a></h4><p><strong>架构优势</strong>：</p><div class="language-" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>+---------------------------------------------------+</span></span>
<span class="line"><span>|                IPVS 内核模块                      |</span></span>
<span class="line"><span>|   +---------------------+                        |</span></span>
<span class="line"><span>|   |  Virtual Service    | 10.96.1.1:80           |</span></span>
<span class="line"><span>|   +---------------------+                        |</span></span>
<span class="line"><span>|     |                  |                         |</span></span>
<span class="line"><span>|     v                  v                         |</span></span>
<span class="line"><span>| +-----------+     +-----------+                  |</span></span>
<span class="line"><span>| | Real Server |    | Real Server |               |</span></span>
<span class="line"><span>| | 10.244.1.2 |    | 10.244.2.3 |                |</span></span>
<span class="line"><span>| +-----------+     +-----------+                  |</span></span>
<span class="line"><span>+---------------------------------------------------+</span></span></code></pre></div><p><strong>配置示例</strong>：</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 创建虚拟服务（使用轮询算法）</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">ipvsadm</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -A</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -t</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 10.96.1.1:80</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -s</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> rr</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 添加真实服务器</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">ipvsadm</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -a</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -t</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 10.96.1.1:80</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -r</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 10.244.1.2:80</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -m</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  # NAT 模式</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">ipvsadm</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -a</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -t</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 10.96.1.1:80</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -r</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 10.244.2.3:80</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -m</span></span></code></pre></div><p><strong>优势</strong>：</p><ul><li>支持多种负载均衡算法（rr, wrr, lc, wlc 等）</li><li>时间复杂度 O(1)，适合大规模集群</li><li>更精细的流量控制能力</li></ul><h3 id="_3-2-kube-proxy-的数据流详细分析" tabindex="-1"><a class="header-anchor" href="#_3-2-kube-proxy-的数据流详细分析"><span>3.2 kube-proxy 的数据流详细分析</span></a></h3><h4 id="_3-2-1-同节点-pod-间通信" tabindex="-1"><a class="header-anchor" href="#_3-2-1-同节点-pod-间通信"><span>3.2.1 同节点 Pod 间通信</span></a></h4><p><strong>数据流路径</strong>：</p>`,34)),i("ol",null,[s[1]||(s[1]=a("<li><p><strong>Pod 出站</strong>：</p><ul><li>应用发起请求：<code>curl 10.96.1.1:80</code></li><li>数据包：src=10.244.0.1, dst=10.96.1.1, dport=80</li></ul></li><li><p><strong>veth 设备传输</strong>：</p><ul><li>通过 veth pair 离开 Pod 网络命名空间</li><li>到达主机侧的虚拟网卡（如 veth123）</li></ul></li>",2)),i("li",null,[s[0]||(s[0]=i("p",null,[i("strong",null,"主机网络栈处理"),e("：")],-1)),l(n,{code:"eJxLL0osyFAIceFSUHCMDghyDfIPDfH0c385eV+sgq6unYJTtXeok6tusGtQmKezazBQvBao1AkkV/O0Z+fL1t7g1KKyzOTUF8tbnnbMrFFwjoZoCHPWjYiIAJkDVO8MVm9qoPpsWdPzvvYaBReoKtcAXRdXNxNTMwUXP8cQrEpdEUrdPTzNLSzhSl3ALnSLfj573bMF7QH5KQqeAVYKhgZ6RiYmeoZ6RiA1rmA17tjVGOkZx3IBACFbVSU="})]),s[2]||(s[2]=a("<li><p><strong>路由决策</strong>：</p><ul><li>内核检查目标 IP 10.244.1.2</li><li>通过路由表确认是本地 Pod</li><li>示例路由：<code>10.244.1.0/24 dev cni0 scope link</code></li></ul></li><li><p><strong>桥接转发</strong>：</p><ul><li>通过 cni0 网桥转发</li><li>到达目标 Pod 的 veth 接口</li></ul></li>",2))]),s[6]||(s[6]=a(`<h4 id="_3-2-2-跨节点-pod-通信" tabindex="-1"><a class="header-anchor" href="#_3-2-2-跨节点-pod-通信"><span>3.2.2 跨节点 Pod 通信</span></a></h4><p><strong>关键差异点</strong>：</p><ol><li><p><strong>路由阶段</strong>：</p><ul><li>内核发现目标 IP 非本地（如 10.244.2.3）</li><li>查询路由表找到节点路由：<code>10.244.2.0/24 via 192.168.1.2 dev eth0</code></li></ul></li><li><p><strong>跨节点传输</strong>：</p><ul><li>封装方式取决于 CNI 插件（如 VXLAN、IPIP 或直接路由）</li><li>目标节点收到后解封装并转发到目标 Pod</li></ul></li><li><p><strong>返回路径</strong>：</p><ul><li>目标 Pod 响应时直接返回源 Pod IP</li><li>不需要经过 Service VIP 的逆向转换</li></ul></li></ol><h3 id="_3-3-关键网络栈处理顺序" tabindex="-1"><a class="header-anchor" href="#_3-3-关键网络栈处理顺序"><span>3.3 关键网络栈处理顺序</span></a></h3><p><strong>Linux 网络数据包处理流程</strong>：</p><div class="language-" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>+-----------------------+</span></span>
<span class="line"><span>|    Pod 出站数据包      |</span></span>
<span class="line"><span>+-----------------------+</span></span>
<span class="line"><span>           |</span></span>
<span class="line"><span>           v</span></span>
<span class="line"><span>+-----------------------+</span></span>
<span class="line"><span>| 主机网络栈 PREROUTING  | &lt;-- iptables 规则最先处理</span></span>
<span class="line"><span>+-----------------------+</span></span>
<span class="line"><span>           |</span></span>
<span class="line"><span>           v</span></span>
<span class="line"><span>+-----------------------+</span></span>
<span class="line"><span>|     路由决策           | &lt;-- 基于 DNAT 后的目标地址</span></span>
<span class="line"><span>+-----------------------+</span></span>
<span class="line"><span>           |</span></span>
<span class="line"><span>           v</span></span>
<span class="line"><span>+-----------------------+</span></span>
<span class="line"><span>|    POSTROUTING        | &lt;-- 可能的 SNAT 处理</span></span>
<span class="line"><span>+-----------------------+</span></span>
<span class="line"><span>           |</span></span>
<span class="line"><span>           v</span></span>
<span class="line"><span>+-----------------------+</span></span>
<span class="line"><span>|   出站网络接口         |</span></span>
<span class="line"><span>+-----------------------+</span></span></code></pre></div><p><strong>重要结论</strong>：</p><ol><li><strong>DNAT 先于路由决策</strong>：系统先通过 iptables 修改目标地址，然后才做路由</li><li><strong>Service 访问本质</strong>：VIP 仅在控制平面有意义，数据平面始终使用真实 Pod IP</li><li><strong>性能影响点</strong>：大规模集群中 iptables 规则数量会影响网络性能</li></ol><h2 id="四、生产实践建议" tabindex="-1"><a class="header-anchor" href="#四、生产实践建议"><span>四、生产实践建议</span></a></h2><h3 id="_4-1-模式选择" tabindex="-1"><a class="header-anchor" href="#_4-1-模式选择"><span>4.1 模式选择</span></a></h3><ol><li><p><strong>中小集群</strong>：</p><ul><li>默认 iptables 模式即可</li><li>规则数量 &lt; 5000 时性能可接受</li></ul></li><li><p><strong>大型集群</strong>：</p><ul><li>推荐 IPVS 模式</li><li>特别适合 Service 数量多或频繁变动的场景</li></ul></li></ol><h3 id="_4-2-性能调优" tabindex="-1"><a class="header-anchor" href="#_4-2-性能调优"><span>4.2 性能调优</span></a></h3><ol><li><p><strong>IPVS 参数优化</strong>：</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 调整连接哈希表大小</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">echo</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 2097152</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &gt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /sys/module/nf_conntrack/parameters/hashsize</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 增加 IPVS 连接表大小</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">ipvsadm</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --set</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 262144</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 262144</span></span></code></pre></div></li><li><p><strong>iptables 模式优化</strong>：</p><ul><li>定期清理僵尸规则</li><li>考虑使用 <code>--random-fully</code> 选项避免端口冲突</li></ul></li></ol><h3 id="_4-3-监控与排错" tabindex="-1"><a class="header-anchor" href="#_4-3-监控与排错"><span>4.3 监控与排错</span></a></h3><p><strong>关键监控指标</strong>：</p><ol><li><code>kube_proxy_sync_proxy_rules_duration_seconds</code>：规则同步耗时</li><li><code>kube_proxy_network_programming_duration_seconds</code>：网络编程延迟</li><li><code>ipvs_connections</code>：IPVS 当前连接数</li></ol><p><strong>常见问题排查</strong>：</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 检查 iptables 规则</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">iptables-save</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> |</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> grep</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> KUBE-SVC</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 检查 IPVS 配置</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">ipvsadm</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -Ln</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 检查路由表</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">ip</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> route</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> show</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> table</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> all</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 检查连接跟踪</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">conntrack</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -L</span></span></code></pre></div><h2 id="五、总结" tabindex="-1"><a class="header-anchor" href="#五、总结"><span>五、总结</span></a></h2><p>Kubernetes Service 和 kube-proxy 共同构成了集群内服务通信的基础设施：</p>`,20)),i("ol",null,[s[4]||(s[4]=a("<li><p><strong>Service</strong> 提供稳定的抽象层：</p><ul><li>通过 VIP 屏蔽后端 Pod 变化</li><li>多种类型满足不同暴露需求</li><li>内置负载均衡能力</li></ul></li><li><p><strong>kube-proxy</strong> 实现数据平面：</p><ul><li>多种模式适应不同规模场景</li><li>利用内核能力实现高效转发</li><li>实时响应集群状态变化</li></ul></li>",2)),i("li",null,[s[3]||(s[3]=i("p",null,[i("strong",null,"整体协作"),e("：")],-1)),l(n,{code:"eJxLL0osyFDwCeJSUHCMDshPiVXQ1bWrebF++7ONTcGpRWWZyakKYZ4BNQpO0dmlSam6BUX5FZUvlrc87ZgZC9TjBFKu4Fz9bMXCp3v6XzZ0PuteWQsUdwaLu0RnFpQkJuWkFiu4+DmGgDRAJFyjPQPCghVebJn/Yu/ep3PbXyxcCJJ0UVBTcAUrcIt+um7ey5mtIBdxAQBq1T+F"})])]),s[7]||(s[7]=a(`<p>理解这些底层机制有助于：</p><ul><li>更合理地设计微服务架构</li><li>高效排查网络问题</li><li>针对特定场景进行性能优化</li><li>安全策略的精确实施</li></ul><p>随着 Kubernetes 生态发展，Service 的实现也在不断演进（如 Cilium 的 eBPF 实现），但核心思想保持不变：提供稳定、可靠的网络抽象层。</p><h1 id="kubernetes-外部访问方案详解-externalips-与-nodeport-全面解析" tabindex="-1"><a class="header-anchor" href="#kubernetes-外部访问方案详解-externalips-与-nodeport-全面解析"><span>Kubernetes 外部访问方案详解：externalIPs 与 NodePort 全面解析</span></a></h1><h2 id="一、概述" tabindex="-1"><a class="header-anchor" href="#一、概述"><span>一、概述</span></a></h2><p>在 Kubernetes 集群中，Service 作为 Pod 的抽象和负载均衡机制，提供了多种暴露服务到外部网络的方式。本文将深入探讨两种重要的外部访问方案：externalIPs 和 NodePort，分析它们的工作原理、配置方法、适用场景以及最佳实践。</p><h2 id="二、externalips-深度解析" tabindex="-1"><a class="header-anchor" href="#二、externalips-深度解析"><span>二、externalIPs 深度解析</span></a></h2><h3 id="_2-1-基本概念" tabindex="-1"><a class="header-anchor" href="#_2-1-基本概念"><span>2.1 基本概念</span></a></h3><p>externalIPs 是 Service 的一个配置字段，允许管理员指定一个或多个外部 IP 地址来暴露服务。与自动分配的 LoadBalancer IP 不同，externalIPs 需要手动配置和管理。</p><h3 id="_2-2-核心工作原理" tabindex="-1"><a class="header-anchor" href="#_2-2-核心工作原理"><span>2.2 核心工作原理</span></a></h3><ol><li><p><strong>网络流量路径</strong>：</p><ul><li>外部客户端 → 指定的 externalIP → 节点网络栈 → kube-proxy → Service → Pod</li></ul></li><li><p><strong>IP 分配要求</strong>：</p><ul><li>该 IP 必须直接绑定到节点网络接口</li><li>或者通过网络路由可达（需配置正确路由）</li></ul></li><li><p><strong>多节点处理</strong>：</p><ul><li>当 externalIP 配置在多个节点时，kube-proxy 会确保流量被正确转发</li></ul></li></ol><h3 id="_2-3-详细配置指南" tabindex="-1"><a class="header-anchor" href="#_2-3-详细配置指南"><span>2.3 详细配置指南</span></a></h3><h4 id="基础-yaml-示例" tabindex="-1"><a class="header-anchor" href="#基础-yaml-示例"><span>基础 YAML 示例：</span></a></h4><div class="language-yaml" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-yaml"><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">apiVersion</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> v1</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">kind</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Service</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">metadata</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> externalip-service</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">spec</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  selector</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    app</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> MyApp</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  ports</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    -</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> protocol</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> TCP</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">      port</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 80</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">      targetPort</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 9376</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  externalIPs</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    -</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 203.0.113.10</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    -</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 198.51.100.5</span></span></code></pre></div><h4 id="高级配置选项" tabindex="-1"><a class="header-anchor" href="#高级配置选项"><span>高级配置选项：</span></a></h4><ul><li>多端口支持</li><li>不同协议的混合配置</li><li>与 sessionAffinity 配合使用</li></ul><h3 id="_2-4-网络基础设施要求" tabindex="-1"><a class="header-anchor" href="#_2-4-网络基础设施要求"><span>2.4 网络基础设施要求</span></a></h3><ol><li><p><strong>IP 分配方案</strong>：</p><ul><li>静态配置于节点接口</li></ul><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ip</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> addr</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> add</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 203.0.113.10/24</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> dev</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> eth0</span></span></code></pre></div><ul><li>通过 DHCP 保留</li><li>云平台的浮动 IP</li></ul></li><li><p><strong>路由配置</strong>：</p><ul><li>静态路由配置示例（Cisco）：</li></ul><div class="language-" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>ip route 203.0.113.10 255.255.255.255 &lt;node-ip&gt;</span></span></code></pre></div></li><li><p><strong>防火墙规则</strong>：</p><ul><li>需要开放指定端口</li><li>考虑源 IP 限制</li></ul></li></ol><h3 id="_2-5-验证与排错" tabindex="-1"><a class="header-anchor" href="#_2-5-验证与排错"><span>2.5 验证与排错</span></a></h3><ol><li>验证步骤：</li></ol><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 检查 Service 配置</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">kubectl</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> describe</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> svc</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> externalip-service</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 测试连通性</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">curl</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -v</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> http://203.0.113.10:80</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 检查节点网络配置</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">kubectl</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> get</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> nodes</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -o</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> wide</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">ssh</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> node01</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ip</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> addr</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> show</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> |</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> grep</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 203.0.113.10</span></span></code></pre></div><ol start="2"><li>常见问题排查：</li></ol><ul><li>IP 未正确分配到节点</li><li>路由配置错误</li><li>防火墙阻止访问</li><li>kube-proxy 服务异常</li></ul><h2 id="三、nodeport-全面剖析" tabindex="-1"><a class="header-anchor" href="#三、nodeport-全面剖析"><span>三、NodePort 全面剖析</span></a></h2><h3 id="_3-1-基本架构" tabindex="-1"><a class="header-anchor" href="#_3-1-基本架构"><span>3.1 基本架构</span></a></h3><p>NodePort 服务在每个节点上开放一个静态端口（默认 30000-32767），通过该端口将外部流量转发到 Service。</p><h4 id="流量路径" tabindex="-1"><a class="header-anchor" href="#流量路径"><span>流量路径：</span></a></h4><p>外部客户端 → 任意节点IP:NodePort → Service → Pod</p><h3 id="_3-2-详细配置方法" tabindex="-1"><a class="header-anchor" href="#_3-2-详细配置方法"><span>3.2 详细配置方法</span></a></h3><h4 id="基础-yaml" tabindex="-1"><a class="header-anchor" href="#基础-yaml"><span>基础 YAML：</span></a></h4><div class="language-yaml" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-yaml"><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">apiVersion</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> v1</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">kind</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Service</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">metadata</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> nodeport-demo</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">spec</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  type</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> NodePort</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  selector</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    app</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> MyApp</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  ports</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    -</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> http</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">      port</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 80</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">      targetPort</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 8080</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">      nodePort</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 31000</span></span></code></pre></div><h4 id="高级配置选项-1" tabindex="-1"><a class="header-anchor" href="#高级配置选项-1"><span>高级配置选项：</span></a></h4><ul><li>自定义端口范围</li><li>多协议支持</li><li>特定节点选择</li></ul><h3 id="_3-3-端口管理" tabindex="-1"><a class="header-anchor" href="#_3-3-端口管理"><span>3.3 端口管理</span></a></h3><ol><li>默认端口范围：30000-32767</li><li>修改范围（需修改 API Server 配置）：</li></ol><div class="language-yaml" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-yaml"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># /etc/kubernetes/manifests/kube-apiserver.yaml</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">spec</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  containers</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  -</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> command</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> kube-apiserver</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> --service-node-port-range=30000-35000</span></span></code></pre></div><h3 id="_3-4-负载均衡策略" tabindex="-1"><a class="header-anchor" href="#_3-4-负载均衡策略"><span>3.4 负载均衡策略</span></a></h3><ol><li><p><strong>内置负载均衡</strong>：</p><ul><li>基于 kube-proxy 的轮询算法</li><li>支持 sessionAffinity</li></ul></li><li><p><strong>外部负载均衡集成</strong>：</p><ul><li>云负载均衡器配置示例（AWS ALB）：</li></ul><div class="language-terraform" data-highlighter="shiki" data-ext="terraform" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-terraform"><span class="line"><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">resource</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> &quot;aws_lb_target_group&quot;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> &quot;example&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  port     </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 31000</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  protocol </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">HTTP</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  vpc_id   </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> aws_vpc</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">main</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">id</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre></div></li></ol><h3 id="_3-5-安全最佳实践" tabindex="-1"><a class="header-anchor" href="#_3-5-安全最佳实践"><span>3.5 安全最佳实践</span></a></h3><ol><li>网络策略（NetworkPolicy）：</li></ol><div class="language-yaml" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-yaml"><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">apiVersion</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> networking.k8s.io/v1</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">kind</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> NetworkPolicy</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">metadata</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> nodeport-allow</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">spec</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  podSelector</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    matchLabels</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">      app</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> MyApp</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  ingress</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  -</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> from</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    -</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> ipBlock</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">        cidr</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 192.168.1.0/24</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    ports</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    -</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> protocol</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> TCP</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">      port</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 80</span></span></code></pre></div><ol start="2"><li>其他安全措施：</li></ol><ul><li>结合 TLS 终止</li><li>实施速率限制</li><li>启用访问日志</li></ul><h2 id="四、方案对比与选型指南" tabindex="-1"><a class="header-anchor" href="#四、方案对比与选型指南"><span>四、方案对比与选型指南</span></a></h2><h3 id="_4-1-功能对比" tabindex="-1"><a class="header-anchor" href="#_4-1-功能对比"><span>4.1 功能对比</span></a></h3><table><thead><tr><th>特性</th><th>externalIPs</th><th>NodePort</th></tr></thead><tbody><tr><td>IP 管理</td><td>手动配置</td><td>自动分配</td></tr><tr><td>端口范围</td><td>任意端口</td><td>30000-32767</td></tr><tr><td>负载均衡</td><td>需外部实现</td><td>节点间需额外 LB</td></tr><tr><td>云平台兼容性</td><td>较低</td><td>高</td></tr><tr><td>网络要求</td><td>需控制底层网络</td><td>标准网络即可</td></tr></tbody></table><h3 id="_4-2-性能考量" tabindex="-1"><a class="header-anchor" href="#_4-2-性能考量"><span>4.2 性能考量</span></a></h3><ol><li><p><strong>externalIPs</strong>：</p><ul><li>直接路由，延迟较低</li><li>适合高吞吐量场景</li></ul></li><li><p><strong>NodePort</strong>：</p><ul><li>额外 NAT 转换带来小量开销</li><li>节点故障时需要客户端重试</li></ul></li></ol><h3 id="_4-3-选型建议" tabindex="-1"><a class="header-anchor" href="#_4-3-选型建议"><span>4.3 选型建议</span></a></h3><p><strong>选择 externalIPs 当</strong>：</p><ul><li>有严格的 IP 地址要求</li><li>能控制底层网络基础设施</li><li>需要固定知名端口</li><li>在裸金属环境部署</li></ul><p><strong>选择 NodePort 当</strong>：</p><ul><li>需要快速原型开发</li><li>在云环境中运行</li><li>需要与其他服务类型兼容</li><li>作为 Ingress 或 LoadBalancer 的底层机制</li></ul><h2 id="五、生产环境最佳实践" tabindex="-1"><a class="header-anchor" href="#五、生产环境最佳实践"><span>五、生产环境最佳实践</span></a></h2><h3 id="_5-1-混合架构示例" tabindex="-1"><a class="header-anchor" href="#_5-1-混合架构示例"><span>5.1 混合架构示例</span></a></h3><p>结合多种服务类型的典型生产架构：</p><div class="language-" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>外部用户 → 全球负载均衡 → [ 区域LB → NodePort ] → Service → Pod</span></span>
<span class="line"><span>                                  ↑</span></span>
<span class="line"><span>                             externalIPs 备用路径</span></span></code></pre></div><h3 id="_5-2-高可用性设计" tabindex="-1"><a class="header-anchor" href="#_5-2-高可用性设计"><span>5.2 高可用性设计</span></a></h3><ol><li><p><strong>externalIPs 高可用</strong>：</p><ul><li>使用 BGP 协议实现 IP 浮动</li><li>配合 keepalived 实现故障转移</li></ul></li><li><p><strong>NodePort 高可用</strong>：</p><ul><li>部署多个节点</li><li>使用外部健康检查</li><li>自动剔除不健康节点</li></ul></li></ol><h3 id="_5-3-监控与运维" tabindex="-1"><a class="header-anchor" href="#_5-3-监控与运维"><span>5.3 监控与运维</span></a></h3><ol><li><p>关键监控指标：</p><ul><li>连接数</li><li>延迟</li><li>错误率</li><li>节点资源使用率</li></ul></li><li><p>Prometheus 配置示例：</p></li></ol><div class="language-yaml" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-yaml"><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> job_name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">nodeport_metrics</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  metrics_path</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /metrics</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  static_configs</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  -</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> targets</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">node1:31000</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">node2:31000</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span></span></code></pre></div><h2 id="六、总结" tabindex="-1"><a class="header-anchor" href="#六、总结"><span>六、总结</span></a></h2><p>externalIPs 和 NodePort 都是 Kubernetes 中重要的服务暴露机制，各有其适用场景。理解它们的工作原理、配置细节和适用场景，对于设计可靠的 Kubernetes 网络架构至关重要。在实际应用中，往往需要根据具体的基础设施环境、安全要求和性能需求，选择合适的方案或组合使用多种方案。</p>`,64))])}const c=p(r,[["render",d]]),y=JSON.parse('{"path":"/k8s/hreo17tb/","title":"service原理","lang":"zh-CN","frontmatter":{"title":"service原理","createTime":"2025/08/03 17:19:21","permalink":"/k8s/hreo17tb/","description":"一、Kubernetes Service 概述 Kubernetes Service 是 Kubernetes 系统中的核心抽象概念之一，它为运行在集群中的应用程序提供稳定的网络端点。Service 解决了 Pod 动态特性带来的网络连接问题： Pod 动态性挑战： Pod 是临时的，可能随时被创建或销毁 Pod IP 会随着重启或迁移而变化 部署规模...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"service原理\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-08-13T15:11:46.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://blog.jianzhihao.icu/k8s/hreo17tb/"}],["meta",{"property":"og:site_name","content":"ZH Blog"}],["meta",{"property":"og:title","content":"service原理"}],["meta",{"property":"og:description","content":"一、Kubernetes Service 概述 Kubernetes Service 是 Kubernetes 系统中的核心抽象概念之一，它为运行在集群中的应用程序提供稳定的网络端点。Service 解决了 Pod 动态特性带来的网络连接问题： Pod 动态性挑战： Pod 是临时的，可能随时被创建或销毁 Pod IP 会随着重启或迁移而变化 部署规模..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-13T15:11:46.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-13T15:11:46.000Z"}]]},"readingTime":{"minutes":10.08,"words":3024},"git":{"createdTime":1755092670000,"updatedTime":1755097906000,"contributors":[{"name":"zhihao","username":"zhihao","email":"mac@zhihaomac.local","commits":2,"avatar":"https://avatars.githubusercontent.com/zhihao?v=4","url":"https://github.com/zhihao"}],"changelog":[{"hash":"b14e6181535ae1948c566c3579bb41b2ebd924aa","time":1755097906000,"email":"mac@zhihaomac.local","author":"zhihao","message":"add calico"},{"hash":"6a272eac072f3a24fb0b185a226bdba357b43947","time":1755092670000,"email":"mac@zhihaomac.local","author":"zhihao","message":"add calico"}]},"autoDesc":true,"filePathRelative":"notes/k8s/1. 基础/1. service原理.md","headers":[]}');export{c as comp,y as data};
