import{_ as i,c as a,e,o as t}from"./app-DIgjTPbY.js";const h="/assets/architecture-calico-deae813300e472483f84d6bfb49650ab-CTuW2vRC.svg",n={};function l(d,s){return t(),a("div",null,s[0]||(s[0]=[e('<p>在 Calico（或基于 BGP 的网络架构）中，路由宣告的触发条件与网络拓扑变化、策略调整或系统事件密切相关。以下是详细场景分析及触发机制：</p><hr><h2 id="_1-calico架构图" tabindex="-1"><a class="header-anchor" href="#_1-calico架构图"><span><strong>1. Calico架构图</strong></span></a></h2><img src="'+h+`" class="no-view"><hr><table><thead><tr><th><strong>组件</strong></th><th><strong>子模块/文件</strong></th><th><strong>核心功能</strong></th><th><strong>配置参数示例</strong></th><th><strong>交互组件</strong></th><th><strong>典型工作场景</strong></th></tr></thead><tbody><tr><td><strong>Felix</strong></td><td><code>felix.cfg</code></td><td>- 管理节点本地路由表 (<code>route table</code>) <br>- 配置iptables/eBPF规则链 (<code>cali-INPUT</code>, <code>cali-FORWARD</code>等) <br>- 实施网络策略（标记流量<code>allow/deny</code>）</td><td><code>RouteRefreshInterval=10s</code> <br><code>MetadataAddr=127.0.0.1</code> <br><code>IptablesMarkMask=0xff000000</code></td><td>BIRD, etcd/K8s API, Typha</td><td>Pod创建时自动添加路由规则；策略更新时实时生效</td></tr><tr><td><strong>BIRD</strong></td><td><code>bird.cfg</code> (由confd生成)</td><td>- 通过BGP协议广播本节点Pod CIDR（如<code>10.0.1.0/24</code>）<br>- 学习其他节点的路由（<code>via Node2</code>）</td><td><code>protocol bgp { local as 64512; neighbor 192.168.1.2 as 64512; }</code></td><td>Felix, Route Reflector</td><td>新节点加入时自动建立BGP对等连接</td></tr><tr><td><strong>Calico CNI Plugin</strong></td><td><code>10-calico.conflist</code></td><td>- 调用IPAM插件分配Pod IP<br>- 创建veth pair (<code>caliXXXXX</code>)<br>- 设置Pod网络命名空间路由</td><td><code>&quot;ipam&quot;: { &quot;type&quot;: &quot;calico-ipam&quot;, &quot;subnet&quot;: &quot;usePodCidr&quot; }</code></td><td>kubelet, IPAM, Felix</td><td><code>kubectl run</code>时被kubelet调用，完成Pod网络配置</td></tr><tr><td><strong>calico-kube-controllers</strong></td><td><code>policy-controller</code></td><td>- 监听K8s <code>NetworkPolicy</code>并同步到Felix<br>- 清理孤儿IP地址（<code>IPGC</code>）<br>- 维护节点心跳</td><td><code>controllers: node, policy, serviceaccount</code></td><td>K8s API Server, etcd</td><td>用户创建<code>NetworkPolicy</code>时，转换为Calico格式并下发</td></tr><tr><td><strong>Typha</strong></td><td><code>typha-deployment.yaml</code></td><td>- 代理Felix的API请求（缓存<code>Nodes</code>, <code>Policies</code>）<br>- 减少API Server负载（连接数从O(N)→O(1)）</td><td><code>maxConnsPerClient=4</code> <br><code>clientPort=5473</code></td><td>Felix, K8s API</td><td>集群超过50节点时，Felix通过Typha获取策略而非直连API</td></tr><tr><td><strong>Route Reflector</strong></td><td><code>bgpconfiguration.yaml</code></td><td>- 集中式路由分发（替代全互联）<br>- 支持集群AS号（<code>AS 64512</code>）和路由聚合</td><td><code>routeReflectorClusterID: 1.0.0.1</code> <br><code>logSeverityScreen: Info</code></td><td>BIRD (所有节点)</td><td>跨可用区部署时，通过RR避免节点间直接BGP连接</td></tr><tr><td><strong>etcd/K8s API</strong></td><td><code>calico-config</code> ConfigMap</td><td>- 存储<code>IPPools</code>（<code>10.0.0.0/16</code>）<br>- 保存<code>BGPPeers</code>和<code>NetworkPolicy</code>定义</td><td><code>etcd_endpoints: &quot;https://etcd:2379&quot;</code> <br><code>useKubernetesAPI: true</code></td><td>所有组件</td><td>管理员通过<code>calicoctl</code>创建IP池时写入etcd</td></tr><tr><td><strong>confd</strong></td><td><code>/etc/calico/confd</code></td><td>- 监听etcd/K8s API变更（如<code>BGPPeer</code>更新）<br>- 动态生成BIRD配置并触发重载</td><td><code>confd -watch -interval 10</code></td><td>BIRD, etcd</td><td>BGP对等节点IP变更时，自动更新<code>bird.cfg</code>并执行<code>birdc configure</code></td></tr><tr><td><strong>eBPF Dataplane</strong></td><td><code>bpfnat</code>, <code>bpfilter</code></td><td>- 替换kube-proxy实现Service负载均衡<br>- 通过eBPF map加速策略匹配（<code>calico_prefilter</code>）</td><td><code>bpfEnabled: true</code> <br><code>bpfExternalServiceMode: DSR</code></td><td>Linux内核, Felix</td><td>高性能场景下，Service的DNAT规则由eBPF程序处理</td></tr><tr><td><strong>WireGuard</strong></td><td><code>wg-cali</code> (接口)</td><td>- 加密节点间流量（<code>udp port 51820</code>）<br>- 支持PSK或证书认证</td><td><code>wireguardEnabled: true</code> <br><code>wireguardListeningPort: 51820</code></td><td>节点网络栈</td><td>跨公有云部署时，自动建立加密隧道</td></tr></tbody></table><h2 id="_2-calico使用" tabindex="-1"><a class="header-anchor" href="#_2-calico使用"><span><strong>2. Calico使用</strong></span></a></h2><h3 id="_1-setup-kind集群" tabindex="-1"><a class="header-anchor" href="#_1-setup-kind集群"><span>1.setup kind集群</span></a></h3><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">kind:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Cluster</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">apiVersion:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> kind.x-k8s.io/v1alpha4</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">nodes:</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">  -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> role:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> control-plane</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">  -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> role:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> worker</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">  -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> role:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> worker</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">networking:</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">  disableDefaultCNI:</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> true</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">  podSubnet:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 192.168.0.0/16</span></span></code></pre></div><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">kind</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> create</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> cluster</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --name=calico-cluster</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --config=config.yaml</span></span></code></pre></div><h3 id="_2-安装calico" tabindex="-1"><a class="header-anchor" href="#_2-安装calico"><span>2. 安装calico</span></a></h3><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">kubectl</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> create</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -f</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://raw.githubusercontent.com/projectcalico/calico/v3.30.2/manifests/tigera-operator.yaml</span></span></code></pre></div><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">kubectl</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> create</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -f</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://raw.githubusercontent.com/projectcalico/calico/v3.30.2/manifests/custom-resources.yaml</span></span></code></pre></div><h3 id="_3-查看web页面" tabindex="-1"><a class="header-anchor" href="#_3-查看web页面"><span>3. 查看web页面</span></a></h3><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">kubectl</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> port-forward</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -n</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> calico-system</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> service/whisker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 8081:8081</span></span></code></pre></div><h3 id="_4-安装nginx测试" tabindex="-1"><a class="header-anchor" href="#_4-安装nginx测试"><span>4. 安装nginx测试</span></a></h3><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">kubectl</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> create</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> namespace</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> quickstart</span></span></code></pre></div><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">kubectl</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> create</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> deployment</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --namespace=quickstart</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> nginx</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --image=nginx</span></span></code></pre></div><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">kubectl</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> expose</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --namespace=quickstart</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> deployment</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> nginx</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --port=80</span></span></code></pre></div><p>安装并暴露服务成功之后，创建busybox容器并对nginx pod进行访问</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">kubectl</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> run</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --namespace=quickstart</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> access</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --rm</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -ti</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --image</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> busybox</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /bin/sh</span></span></code></pre></div><p>此时，通过pod网络访问集群内nginx和访问外网都能成功</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">wget</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -qO-</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> http://nginx</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">wget</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -qO-</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://docs.tigera.io/pod-connection-test.txt</span></span></code></pre></div><h3 id="_5-通过calico对网络加一些限制" tabindex="-1"><a class="header-anchor" href="#_5-通过calico对网络加一些限制"><span>5. 通过calico对网络加一些限制</span></a></h3><p>对进ingress和egress都进行限制</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">kubectl</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> create</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -f</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> -</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;&lt;</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">EOF</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">apiVersion: projectcalico.org/v3</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">kind: GlobalNetworkPolicy</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">metadata:</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">  name: default-deny</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">spec:</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">  selector: projectcalico.org/namespace not in {&#39;kube-system&#39;, &#39;calico-system&#39;, &#39;calico-apiserver&#39;}</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">  types:</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">    - Ingress</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">    - Egress</span></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">EOF</span></span></code></pre></div><p>在进行网络限制之后，访问nginx和外网都会失败。</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">wget</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -qO-</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> http://nginx</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">wget</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -qO-</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://docs.tigera.io/pod-connection-test.txt</span></span></code></pre></div><h3 id="_5-把网络放开一点" tabindex="-1"><a class="header-anchor" href="#_5-把网络放开一点"><span>5. 把网络放开一点</span></a></h3><p>把egress放开</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">kubectl</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> create</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -f</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> -</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;&lt;</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">EOF</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">apiVersion: projectcalico.org/v3</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">kind: NetworkPolicy</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">metadata:</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">  name: allow-busybox-egress</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">  namespace: quickstart</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">spec:</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">  selector: run == &#39;access&#39;</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">  types:</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">  - Egress</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">  egress:</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">  - action: Allow</span></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">EOF</span></span></code></pre></div><p>此时访问外网可以成功，但是访问nginx依旧失败。</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">wget</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -qO-</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://docs.tigera.io/pod-connection-test.txt</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">wget</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -qO-</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> http://nginx</span></span></code></pre></div><p>把nginx的ingress打开</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">kubectl</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> create</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -f</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> -</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;&lt;</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">EOF</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">apiVersion: projectcalico.org/v3</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">kind: NetworkPolicy</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">metadata:</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">  name: allow-nginx-ingress</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">  namespace: quickstart</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">spec:</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">  selector: app == &#39;nginx&#39;</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">  types:</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">  - Ingress</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">  ingress:</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">  - action: Allow</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">    source:</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">      selector: run == &#39;access&#39;</span></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">EOF</span></span></code></pre></div><p>此时访问nginx即可成功</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">wget</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -qO-</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> http://nginx</span></span></code></pre></div><h3 id="_6-清理" tabindex="-1"><a class="header-anchor" href="#_6-清理"><span>6. 清理</span></a></h3><div class="language-bash" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">kind</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> delete</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> cluster</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --name</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> calico-cluster</span></span></code></pre></div>`,39)]))}const p=i(n,[["render",l]]),c=JSON.parse('{"path":"/k8s/ayl6l9u6/","title":"🐱Calico架构和使用","lang":"zh-CN","frontmatter":{"title":"🐱Calico架构和使用","createTime":"2025/08/03 18:03:36","permalink":"/k8s/ayl6l9u6/","description":"在 Calico（或基于 BGP 的网络架构）中，路由宣告的触发条件与网络拓扑变化、策略调整或系统事件密切相关。以下是详细场景分析及触发机制： 1. Calico架构图 2. Calico使用 1.setup kind集群 2. 安装calico 3. 查看web页面 4. 安装nginx测试 安装并暴露服务成功之后，创建busybox容器并对ngin...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"🐱Calico架构和使用\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-08-13T15:11:46.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://blog.jianzhihao.icu/k8s/ayl6l9u6/"}],["meta",{"property":"og:site_name","content":"ZH Blog"}],["meta",{"property":"og:title","content":"🐱Calico架构和使用"}],["meta",{"property":"og:description","content":"在 Calico（或基于 BGP 的网络架构）中，路由宣告的触发条件与网络拓扑变化、策略调整或系统事件密切相关。以下是详细场景分析及触发机制： 1. Calico架构图 2. Calico使用 1.setup kind集群 2. 安装calico 3. 查看web页面 4. 安装nginx测试 安装并暴露服务成功之后，创建busybox容器并对ngin..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-13T15:11:46.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-13T15:11:46.000Z"}]]},"readingTime":{"minutes":3.44,"words":1033},"git":{"createdTime":1755097906000,"updatedTime":1755097906000,"contributors":[{"name":"zhihao","username":"zhihao","email":"mac@zhihaomac.local","commits":1,"avatar":"https://avatars.githubusercontent.com/zhihao?v=4","url":"https://github.com/zhihao"}],"changelog":[{"hash":"b14e6181535ae1948c566c3579bb41b2ebd924aa","time":1755097906000,"email":"mac@zhihaomac.local","author":"zhihao","message":"add calico"}]},"autoDesc":true,"filePathRelative":"notes/k8s/2. 网络/Calico/2.Calico架构和使用.md","headers":[]}');export{p as comp,c as data};
